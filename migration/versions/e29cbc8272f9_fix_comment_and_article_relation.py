"""fix comment and article relation

Revision ID: e29cbc8272f9
Revises: 48c8f81a2d5b
Create Date: 2023-07-19 20:16:06.926991

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "e29cbc8272f9"
down_revision = "48c8f81a2d5b"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        "article_author_article_fkey", "article", type_="foreignkey"
    )
    op.create_foreign_key(
        None,
        "article",
        "author",
        ["author_article"],
        ["id"],
        ondelete="CASCADE",
    )
    op.add_column(
        "comment", sa.Column("article_comment", sa.Integer(), nullable=True)
    )
    op.drop_constraint("comment_article_id_key", "comment", type_="unique")
    op.drop_constraint(
        "comment_article_id_fkey", "comment", type_="foreignkey"
    )
    op.drop_constraint(
        "comment_author_comment_fkey", "comment", type_="foreignkey"
    )
    op.create_foreign_key(
        None,
        "comment",
        "article",
        ["article_comment"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        None,
        "comment",
        "author",
        ["author_comment"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_column("comment", "article_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "comment",
        sa.Column(
            "article_id", sa.INTEGER(), autoincrement=False, nullable=True
        ),
    )
    op.drop_constraint(None, "comment", type_="foreignkey")
    op.drop_constraint(None, "comment", type_="foreignkey")
    op.create_foreign_key(
        "comment_author_comment_fkey",
        "comment",
        "author",
        ["author_comment"],
        ["id"],
    )
    op.create_foreign_key(
        "comment_article_id_fkey", "comment", "article", ["article_id"], ["id"]
    )
    op.create_unique_constraint(
        "comment_article_id_key", "comment", ["article_id"]
    )
    op.drop_column("comment", "article_comment")
    op.drop_constraint(None, "article", type_="foreignkey")
    op.create_foreign_key(
        "article_author_article_fkey",
        "article",
        "author",
        ["author_article"],
        ["id"],
    )
    # ### end Alembic commands ###
